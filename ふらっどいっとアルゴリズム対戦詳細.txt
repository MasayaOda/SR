入力

w h
a00 a01 ... a0w-1
a10 a11 ... a1w-1
...
ah-10 ah-11 ... ah-1w-1

上記のようなh+1行の入力が与えられる．

最初の1行は，2つの整数wとhがスペースで区切られて与えられる．
wは盤面の横のサイズである．
hは盤面の縦のサイズである．

続くh行では，現在の盤面の色が与えられる．
各行にw個の整数(0-5)がそれぞれスペースで区切られて与えられる．
整数はそれぞれ異なる色に対応している．


入力例1

5 5
4 3 5 2 3
4 4 0 2 3
2 2 3 0 4
3 5 3 5 4
5 1 5 4 5



出力

変更したい色を1つ選び，
その色に対応する0-5の整数を1つ，1行に出力する．
たとえば，入力例1で2の色に変更したい場合，
2
と1行に出力すればよい．




条件

自分は常に左上である．
入力が与えられてから5s以内に出力をすること．
しなかった場合は時間切れとし，勝手にランダムな色を選択したものとする．
変更不可能な出力をした場合も同様とする．
メモリ制限は特に設けないが，
ノートパソコンで実行される場合もあることを忘れないこと．


サンプルプログラム(c++)

#include <stdio.h>
#include <iostream>

using namespace std;					//入出力するための魔法の呪文

int main(){
	int i,j;
	int w,h;							//盤面のサイズ
	int c[100][100];					//盤面の色を記憶用
	int ans;							//出力用

	cin >> w >> h;						//盤面のサイズを読み込み

	for (i=0;i<h;i++){
	for (j=0;j<w;j++){
		cin >> c[j][i];					//盤面の色を読み込み
		}
	}}
										//とれるもののうち適当に一つ選ぶだけ
	for (i=0;i<6;i++){					//それぞれの色に着目する
		if (i==c[0][0]) continue;		//自分の色だったら無視する
		if (i==c[w-1][h-1]) continue;	//相手の色だったら無視する
			ans=i;						//変更する色を決定
			break;
		}
	}

	cout << ans << endl;				//出力

	return 0;
}
